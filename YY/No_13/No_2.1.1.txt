(ll_env) zhigang@QIHUI01:~/Web_database/mysite_env$ python3 manage.py shell
Python 3.4.3 (default, Nov 17 2016, 01:08:31)
[GCC 4.8.4] on linux
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from blog.models import Blog
>>> dir()
['Blog', '__builtins__']
>>> Blog.objects.all()
<QuerySet [<Blog: Blog: one>, <Blog: Blog: two>, <Blog: Blog: three>]>
>>> Blog.objects.count()
3
>>> Blog.objects.all().count()
3
>>> blog = Blog()
>>> dir()
['Blog', '__builtins__', 'blog']
>>> Blog.objects.all()
<QuerySet [<Blog: Blog: one>, <Blog: Blog: two>, <Blog: Blog: three>]>
>>> blog.title = 'four'
>>> blog.content = 'Do you love me?'
>>> from blog.models import BlogType
>>> BlogType.objects.all()
<QuerySet [<BlogType: Django>, <BlogType: 随笔>, <BlogType: 感悟>]>
>>> blog_type = BlogType.objects.all()[0]
>>> blog.blog_type = blog_type
>>> from django.contrib.auth.models import User
>>> User.objects.all()
<QuerySet [<User: zhigang>]>
>>> user = User.objects.all()[0]
>>> blog.author = user
>>> blog.save()
>>> Blog.objects.all()
<QuerySet [<Blog: Blog: one>, <Blog: Blog: two>, <Blog: Blog: three>, <Blog: Blo                                                                      g: four>]>
>>> dir(blog)
['DoesNotExist', 'MultipleObjectsReturned', '__class__', '__delattr__', '__dict_                                                                      _', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__',                                                                       '__getstate__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__module_                                                                      _', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__                                                                      ', '__setstate__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '                                                                      _check_column_name_clashes', '_check_field_name_clashes', '_check_fields', '_che                                                                      ck_id_field', '_check_index_together', '_check_local_fields', '_check_long_colum                                                                      n_names', '_check_m2m_through_same_relationship', '_check_managers', '_check_mod                                                                      el', '_check_model_name_db_lookup_clashes', '_check_ordering', '_check_swappable                                                                      ', '_check_unique_together', '_do_insert', '_do_update', '_get_FIELD_display', '                                                                      _get_next_or_previous_by_FIELD', '_get_next_or_previous_in_order', '_get_pk_val'                                                                      , '_get_unique_checks', '_meta', '_perform_date_checks', '_perform_unique_checks                                                                      ', '_save_parents', '_save_table', '_set_pk_val', '_state', 'author', 'author_id                                                                      ', 'blog_type', 'blog_type_id', 'check', 'clean', 'clean_fields', 'content', 'cr                                                                      eated_time', 'date_error_message', 'delete', 'from_db', 'full_clean', 'get_defer                                                                      red_fields', 'get_next_by_created_time', 'get_next_by_last_updated_time', 'get_p                                                                      revious_by_created_time', 'get_previous_by_last_updated_time', 'id', 'last_updat                                                                      ed_time', 'objects', 'pk', 'prepare_database_save', 'refresh_from_db', 'save', '                                                                      save_base', 'serializable_value', 'title', 'unique_error_message', 'validate_uni                                                                      que']
>>> blog.last_updated_time
datetime.datetime(2018, 9, 11, 2, 20, 59, 296299, tzinfo=<UTC>)
>>>
